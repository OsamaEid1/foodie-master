{"ast":null,"code":"var _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n\n// const useFetch = (url) => {\n//     let [isPending, setIsPending] = useState(true);\n//     let [data, setData] = useState(null);\n//     let [error, setError] = useState(null);\n\n//     useEffect(() => {\n//         console.log(\"11111\");\n//         fetch(url)\n//         .then(res => {\n//             if (!res.ok) {\n//                 throw Error(\"can not fetch the data\")\n//             }\n//             return res.json();\n//         })\n//         .then(data => {\n//             setData(data);\n//             setIsPending(false);\n//             setError(null);\n//         })\n//         .catch(err => {\n//             console.log(\"hhhh\");\n//             setIsPending(false);\n//             setError(err.message);\n//         })\n//     }, [url])\n//     // console.log(data);\n\n//     return {data, isPending, error}\n// }\n\n// export default useFetch;\n\n// import { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url).then(res => {\n        if (!res.ok) {\n          // error coming back from server\n          throw Error('could not fetch the data for that resource');\n        }\n        return res.json();\n      }).then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      }).catch(err => {\n        // auto catches network / connection error\n        setIsPending(false);\n        setError(err.message);\n      });\n    }, 1000);\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\nexport default useFetch;","map":{"version":3,"names":["useFetch","url","data","setData","useState","isPending","setIsPending","error","setError","useEffect","setTimeout","fetch","then","res","ok","Error","json","catch","err","message"],"sources":["D:/web/Learn_React/Foodie-Master/src/components/useFetch.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n\r\n// const useFetch = (url) => {\r\n//     let [isPending, setIsPending] = useState(true);\r\n//     let [data, setData] = useState(null);\r\n//     let [error, setError] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         console.log(\"11111\");\r\n//         fetch(url)\r\n//         .then(res => {\r\n//             if (!res.ok) {\r\n//                 throw Error(\"can not fetch the data\")\r\n//             }\r\n//             return res.json();\r\n//         })\r\n//         .then(data => {\r\n//             setData(data);\r\n//             setIsPending(false);\r\n//             setError(null);\r\n//         })\r\n//         .catch(err => {\r\n//             console.log(\"hhhh\");\r\n//             setIsPending(false);\r\n//             setError(err.message);\r\n//         })\r\n//     }, [url])\r\n//     // console.log(data);\r\n\r\n//     return {data, isPending, error}\r\n// }\r\n\r\n// export default useFetch;\r\n\r\n// import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetch(url)\r\n      .then(res => {\r\n        if (!res.ok) { // error coming back from server\r\n          throw Error('could not fetch the data for that resource');\r\n        } \r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setIsPending(false);\r\n        setData(data);\r\n        setError(null);\r\n      })\r\n      .catch(err => {\r\n        // auto catches network / connection error\r\n        setIsPending(false);\r\n        setError(err.message);\r\n      })\r\n    }, 1000);\r\n  }, [url])\r\n\r\n  return { data, isPending, error };\r\n}\r\n \r\nexport default useFetch;"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,MAAMA,QAAQ,GAAIC,GAAG,IAAK;EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAExCK,SAAS,CAAC,MAAM;IACdC,UAAU,CAAC,MAAM;MACfC,KAAK,CAACV,GAAG,CAAC,CACTW,IAAI,CAACC,GAAG,IAAI;QACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;UAAE;UACb,MAAMC,KAAK,CAAC,4CAA4C,CAAC;QAC3D;QACA,OAAOF,GAAG,CAACG,IAAI,EAAE;MACnB,CAAC,CAAC,CACDJ,IAAI,CAACV,IAAI,IAAI;QACZI,YAAY,CAAC,KAAK,CAAC;QACnBH,OAAO,CAACD,IAAI,CAAC;QACbM,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,CACDS,KAAK,CAACC,GAAG,IAAI;QACZ;QACAZ,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,CAAClB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEC,IAAI;IAAEG,SAAS;IAAEE;EAAM,CAAC;AACnC,CAAC;AAAA,GA5BKP,QAAQ;AA8Bd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}