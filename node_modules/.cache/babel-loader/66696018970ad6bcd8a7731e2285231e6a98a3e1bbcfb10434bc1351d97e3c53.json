{"ast":null,"code":"var _jsxFileName = \"D:\\\\web\\\\Learn_React\\\\Foodie-Master\\\\src\\\\components\\\\FormComponent.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { Form, useActionData, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormComponent = props => {\n  _s();\n  // Detect which Form Is Requested For\n  let order, reservation, contact;\n  if (props.for == \"order\") {\n    order = true;\n  } else if (props.for == \"reservation\") {\n    reservation = true;\n  } else if (props.for == \"contact\") {\n    contact = true;\n  }\n\n  // Form Validation Result\n  const data = useActionData();\n\n  // Handle Changes\n  // Inputs\n  let [numOfSmallItems, setNumOfSmallItems] = useState(1);\n  let [numOfMediumItems, setNumOfMediumItems] = useState(0);\n  let [numOfLargeItems, setNumOfLargeItems] = useState(0);\n  // CheckBoxes\n  let [smallBoxChecked, setSmallBoxChecked] = useState(true);\n  let [mediumBoxChecked, setMediumBoxChecked] = useState(false);\n  let [largeBoxChecked, setLargeBoxChecked] = useState(false);\n  let handleInputChanges = (input, val) => {\n    if (val >= 0) {\n      if (input === \"sm\") {\n        setNumOfSmallItems(val);\n        if (smallBoxChecked === false) {\n          setSmallBoxChecked(true);\n        }\n        if (val === 0) {\n          setSmallBoxChecked(false);\n        }\n      } else if (input === \"med\") {\n        setNumOfMediumItems(val);\n        if (mediumBoxChecked === false) {\n          setMediumBoxChecked(true);\n        }\n        if (val === 0) {\n          setMediumBoxChecked(false);\n        }\n      } else if (input === \"lg\") {\n        setNumOfLargeItems(val);\n        if (largeBoxChecked === false) {\n          setLargeBoxChecked(true);\n        }\n        if (val === 0) {\n          setLargeBoxChecked(false);\n        }\n      } else {\n        console.error(\"Invalid input name arg in handleInputChanges function call\");\n      }\n    }\n  };\n  let handleCheckBoxChanges = box => {\n    if (box === \"small\") {\n      setSmallBoxChecked(!smallBoxChecked);\n    } else if (box === \"medium\") {\n      setMediumBoxChecked(!mediumBoxChecked);\n    } else if (box === \"large\") {\n      setLargeBoxChecked(!largeBoxChecked);\n    } else {\n      console.error(\"Invalid input name arg in handleCheckBoxChanges function call\");\n    }\n  };\n  let totalCost;\n  let fNameErr, lNameErr, adrsErr, phErr, locErr, CheckBoxesErr;\n  if (order) {\n    // Calculate Total Cost In Real Time\n    (() => {\n      let smPrice = 0,\n        medPrice = 0,\n        lgPrice = 0;\n      if (smallBoxChecked) {\n        smPrice = props.dish.price * numOfSmallItems;\n        totalCost = smPrice;\n      }\n      if (mediumBoxChecked) {\n        medPrice = props.dish.medPrice * numOfMediumItems;\n      }\n      if (largeBoxChecked) {\n        lgPrice = props.dish.lgPrice * numOfLargeItems;\n      }\n      totalCost = smPrice + medPrice + lgPrice;\n      if (props.dish.offer) {\n        let offer = props.dish.offer / 100 * totalCost;\n        totalCost -= offer;\n      }\n    })();\n\n    // Inputs Errors\n    (() => {\n      if (data) {\n        if (data.name) {\n          fNameErr = {\n            border: \"1px solid red\"\n          };\n          lNameErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.fName) {\n          fNameErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.lName) {\n          lNameErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.address) {\n          adrsErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.phone) {\n          phErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.location) {\n          locErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.checkBox) {\n          CheckBoxesErr = {\n            border: \"1px solid red\"\n          };\n        }\n      }\n    })();\n  }\n\n  //Navigation\n  //// In react-router-dom version 6 \n  //// useHistory() is replaced by useNavigate() ;\n  //// import {useNavigate} from 'react-router-dom';\n  //// const navigate = useNavigate();\n  //// navigate('/home')\n\n  // Check Form Validation\n  let [formDisplaying, setFormDisplaying] = useState({\n    display: \"block\"\n  });\n  let [sucOrderDisplaying, setSucOrderDisplaying] = useState({\n    display: \"none\"\n  });\n  let navigate = useNavigate();\n  useEffect(() => {\n    if (data) {\n      if (Object.keys(data).length === 0) {\n        setFormDisplaying({\n          display: \"none\"\n        });\n        setSucOrderDisplaying({\n          display: \"block\"\n        });\n        // console.log(1);\n        setTimeout(() => {\n          // console.log(2);\n          window.sessionStorage.removeItem(\"collection\");\n          window.sessionStorage.removeItem(\"itemId\");\n          navigate(\"/\");\n        }, 2700);\n      }\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      method: \"post\",\n      action: \"\",\n      className: \"main-form\",\n      style: formDisplaying,\n      children: [order && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"name\",\n            children: [\"Name\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"f-name\",\n                placeholder: \"First\",\n                style: fNameErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"l-name\",\n                placeholder: \"Last\",\n                style: lNameErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"err-msg\",\n              children: data && (data.name || data.fName || data.lName)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"address\",\n            children: [\"Address\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"address\",\n              placeholder: \"Address In Details\",\n              style: adrsErr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"err-msg\",\n              children: data && data.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"phone\",\n            children: [\"Phone\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              name: \"phone\",\n              placeholder: \"+2011 4201 4769\",\n              style: phErr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"err-msg\",\n              children: data && data.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"location\",\n            children: [\"Your Location\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"location\",\n              style: locErr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"err-msg\",\n              children: data && data.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Your Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"item-name\",\n            children: [\"Item: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: props.dish.name + \" \" + props.dish.cat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 64\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-size\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: smallBoxChecked,\n                onChange: () => handleCheckBoxChanges(\"small\"),\n                name: \"checkbox-small\",\n                value: \"small-size\",\n                style: CheckBoxesErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Small - \\xA3\", parseFloat(props.dish.price).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"num-of-small-items\",\n                value: numOfSmallItems,\n                onChange: e => handleInputChanges(\"sm\", +e.target.value),\n                style: CheckBoxesErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"medium\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: mediumBoxChecked,\n                onChange: () => handleCheckBoxChanges(\"medium\"),\n                name: \"checkbox-medium\",\n                value: \"medium\",\n                style: CheckBoxesErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Medium - \\xA3\", parseFloat(props.dish.medPrice).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"num-of-medium-items\",\n                value: numOfMediumItems,\n                onChange: e => handleInputChanges(\"med\", +e.target.value),\n                style: CheckBoxesErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"large\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: largeBoxChecked,\n                onChange: () => handleCheckBoxChanges(\"large\"),\n                name: \"checkbox-large\",\n                value: \"large\",\n                style: CheckBoxesErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Large - \\xA3\", parseFloat(props.dish.lgPrice).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"num-of-large-items\",\n                value: numOfLargeItems,\n                onChange: e => handleInputChanges(\"lg\", +e.target.value),\n                style: CheckBoxesErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"err-msg\",\n            children: data && data.checkBox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Offer: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: props.dish.offer ? props.dish.offer + \"%\" : \"No Offer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Cost: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\xA3\", parseFloat(totalCost).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }, this), reservation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-content\",\n        children: /*#__PURE__*/_jsxDEV(\"labe\", {\n          l: true,\n          className: \"name\",\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"f-name\",\n              placeholder: \"First\",\n              style: fNameErr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"l-name\",\n              placeholder: \"Last\",\n              style: lNameErr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"err-msg\",\n            children: data && (data.name || data.fName || data.lName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-order\",\n        style: sucOrderDisplaying,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(\"../images/delivery-boy.png\"),\n          alt: \"delivery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"You will have the order soon..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n_s(FormComponent, \"fYFZa/9MEql23/AJscvrc+IpuI4=\", false, function () {\n  return [useActionData, useNavigate];\n});\n_c = FormComponent;\nexport const formValidation = async _ref => {\n  let {\n    request\n  } = _ref;\n  const data = await request.formData();\n  const submission = {\n    fName: data.get(\"f-name\").replaceAll(\" \", \"\"),\n    lName: data.get(\"l-name\").replaceAll(\" \", \"\"),\n    address: data.get(\"address\").replaceAll(\" \", \"\"),\n    phone: data.get(\"phone\").replaceAll(\" \", \"\"),\n    location: data.get(\"location\").replaceAll(\" \", \"\"),\n    smallBoxChecked: data.get(\"checkbox-small\"),\n    mediumBoxChecked: data.get(\"checkbox-medium\"),\n    largeBoxChecked: data.get(\"checkbox-large\"),\n    numOfSmallItems: data.get(\"num-of-small-items\"),\n    numOfMediumItems: data.get(\"num-of-medium-items\"),\n    numOfLargeItems: data.get(\"num-of-large-items\")\n  };\n\n  // Handle Errors\n  let errors = {};\n\n  // Handle Empty Inputs\n  (() => {\n    if (submission.fName === \"\" && submission.lName === \"\") {\n      errors.name = \"Your Name Is Required !\";\n    } else if (submission.fName === \"\") {\n      errors.fName = \"Your First Name Is Required !\";\n    } else if (submission.lName === \"\") {\n      errors.lName = \"Your Last Name Is Required !\";\n    }\n    if (submission.address === \"\") {\n      errors.address = \"Your Address Is Required !\";\n    }\n    if (submission.phone === \"\") {\n      errors.phone = \"Your Phone Is Required !\";\n    }\n    if (!submission.smallBoxChecked && !submission.mediumBoxChecked && !submission.smallBoxChecked) {\n      errors.checkBox = \"You Must Choose the size of your meal !\";\n    }\n  })();\n\n  // Regular Expressions for checking the inputs\n  const onlyStringReg = /[0-9!.,@#$%^&*(){}[\\]_+=><\\\";:?\\-~/\\\\|]/;\n  const someSpecialCharsReg = /[!@#$%^&*+\\\"?*~]/;\n  const phoneReg = /^(?:(?:\\(?(?:00|\\+)([1-4]\\d\\d|[1-9]\\d?)\\)?)?[\\-\\.\\ \\\\\\/]?)?((?:\\(?\\d{1,}\\)?[\\-\\.\\ \\\\\\/]?){0,})(?:[\\-\\.\\ \\\\\\/]?(?:#|ext\\.?|extension|x)[\\-\\.\\ \\\\\\/]?(\\d+))?$/;\n  const locationUrlReg = /(https?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/;\n\n  // Handle Invalid Inputs\n  (() => {\n    if (submission.fName != \"\" && onlyStringReg.test(submission.fName) && submission.lName != \"\" && onlyStringReg.test(submission.lName)) {\n      errors.name = \"Please Enter valid Names !\";\n    } else if (submission.fName != \"\" && onlyStringReg.test(submission.fName)) {\n      errors.fName = \"Please Enter a valid First Name !\";\n    } else if (submission.lName != \"\" && onlyStringReg.test(submission.lName)) {\n      errors.lName = \"Please Enter a valid Last Name !\";\n    }\n    if (submission.address != \"\" && someSpecialCharsReg.test(submission.address)) {\n      errors.address = \"Please Enter a valid Address !\";\n    }\n    if (submission.phone != \"\" && !phoneReg.test(submission.phone)) {\n      errors.phone = \"Please Enter a valid Phone Number !\";\n    }\n    if (submission.location != \"\" && !locationUrlReg.test(submission.location)) {\n      errors.location = \"Please Enter a valid Location !\";\n    }\n  })();\n  return errors;\n};\nexport default FormComponent;\nvar _c;\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"names":["useEffect","useRef","useState","Form","useActionData","useNavigate","FormComponent","props","order","reservation","contact","for","data","numOfSmallItems","setNumOfSmallItems","numOfMediumItems","setNumOfMediumItems","numOfLargeItems","setNumOfLargeItems","smallBoxChecked","setSmallBoxChecked","mediumBoxChecked","setMediumBoxChecked","largeBoxChecked","setLargeBoxChecked","handleInputChanges","input","val","console","error","handleCheckBoxChanges","box","totalCost","fNameErr","lNameErr","adrsErr","phErr","locErr","CheckBoxesErr","smPrice","medPrice","lgPrice","dish","price","offer","name","border","fName","lName","address","phone","location","checkBox","formDisplaying","setFormDisplaying","display","sucOrderDisplaying","setSucOrderDisplaying","navigate","Object","keys","length","setTimeout","window","sessionStorage","removeItem","cat","parseFloat","toFixed","e","target","value","require","formValidation","request","formData","submission","get","replaceAll","errors","onlyStringReg","someSpecialCharsReg","phoneReg","locationUrlReg","test"],"sources":["D:/web/Learn_React/Foodie-Master/src/components/FormComponent.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { Form, useActionData, useNavigate } from \"react-router-dom\";\r\n\r\nconst FormComponent = (props) => {\r\n    // Detect which Form Is Requested For\r\n    let order, reservation, contact;\r\n    if (props.for == \"order\") {\r\n        order = true;\r\n    } else if (props.for == \"reservation\") {\r\n        reservation = true;\r\n    } else if (props.for == \"contact\") {\r\n        contact = true;\r\n    }\r\n\r\n    // Form Validation Result\r\n    const data = useActionData();\r\n\r\n    // Handle Changes\r\n    // Inputs\r\n    let [numOfSmallItems, setNumOfSmallItems] = useState(1);\r\n    let [numOfMediumItems, setNumOfMediumItems] = useState(0);\r\n    let [numOfLargeItems, setNumOfLargeItems] = useState(0);\r\n    // CheckBoxes\r\n    let [smallBoxChecked, setSmallBoxChecked] = useState(true);\r\n    let [mediumBoxChecked, setMediumBoxChecked] = useState(false);\r\n    let [largeBoxChecked, setLargeBoxChecked] = useState(false);\r\n\r\n    let handleInputChanges = (input, val) => {\r\n        if (val >= 0) {\r\n            if (input === \"sm\") {\r\n                setNumOfSmallItems(val);\r\n                if (smallBoxChecked === false) {\r\n                    setSmallBoxChecked(true);\r\n                }   \r\n                if (val === 0) {\r\n                    setSmallBoxChecked(false);\r\n                }\r\n            } else if (input === \"med\") {\r\n                setNumOfMediumItems(val);\r\n                if (mediumBoxChecked === false) {\r\n                    setMediumBoxChecked(true);\r\n                }\r\n                if (val === 0) {\r\n                    setMediumBoxChecked(false);\r\n                }\r\n            } else if (input === \"lg\") {\r\n                setNumOfLargeItems(val);\r\n                if (largeBoxChecked === false) {\r\n                    setLargeBoxChecked(true);\r\n                }\r\n                if (val === 0) {\r\n                    setLargeBoxChecked(false);\r\n                }\r\n            } else {\r\n                console.error(\"Invalid input name arg in handleInputChanges function call\");\r\n            }\r\n        }\r\n    }\r\n    let handleCheckBoxChanges = (box) => {\r\n        if (box === \"small\") {\r\n            setSmallBoxChecked(!smallBoxChecked);\r\n        } else if (box === \"medium\") {\r\n            setMediumBoxChecked(!mediumBoxChecked);\r\n        } else if (box === \"large\"){\r\n            setLargeBoxChecked(!largeBoxChecked);\r\n        } else {\r\n            console.error(\"Invalid input name arg in handleCheckBoxChanges function call\");\r\n        }\r\n    }\r\n    \r\n    let totalCost;\r\n    let fNameErr, lNameErr, adrsErr, phErr, locErr, CheckBoxesErr;\r\n\r\n    if (order) {\r\n        // Calculate Total Cost In Real Time\r\n        (\r\n            () => {\r\n                let smPrice = 0, medPrice = 0, lgPrice = 0;\r\n                if (smallBoxChecked) {\r\n                    smPrice = props.dish.price * numOfSmallItems; \r\n                    totalCost = smPrice;\r\n                }\r\n                if (mediumBoxChecked) {\r\n                    medPrice = props.dish.medPrice * numOfMediumItems; \r\n                }\r\n                if (largeBoxChecked) {\r\n                    lgPrice = props.dish.lgPrice * numOfLargeItems; \r\n                }\r\n                totalCost = smPrice + medPrice + lgPrice;\r\n                if (props.dish.offer) {\r\n                    let offer = (props.dish.offer / 100) * totalCost;\r\n                    totalCost -= offer;\r\n                }\r\n            }\r\n            )();\r\n\r\n        // Inputs Errors\r\n        (\r\n            () => {\r\n                if (data) {\r\n                    if (data.name) {\r\n                        fNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                        lNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                    }\r\n                    if (data.fName) {\r\n                        fNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                    }\r\n                    if (data.lName) {\r\n                        lNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                    }\r\n                    if (data.address) {\r\n                        adrsErr = {\r\n                            border: \"1px solid red\",\r\n                        };\r\n                    }\r\n                    if (data.phone) {\r\n                        phErr = {\r\n                            border: \"1px solid red\",\r\n                        };\r\n                    }\r\n                    if (data.location) {\r\n                        locErr = {\r\n                            border: \"1px solid red\",\r\n                        };\r\n                    }\r\n                    if (data.checkBox) {\r\n                        CheckBoxesErr = {\r\n                            border: \"1px solid red\",\r\n                        };\r\n                    }\r\n                } \r\n            }\r\n        )();\r\n    }\r\n\r\n    //Navigation\r\n    //// In react-router-dom version 6 \r\n    //// useHistory() is replaced by useNavigate() ;\r\n    //// import {useNavigate} from 'react-router-dom';\r\n    //// const navigate = useNavigate();\r\n    //// navigate('/home')\r\n\r\n    // Check Form Validation\r\n    let [formDisplaying, setFormDisplaying] = useState({display: \"block\"});\r\n    let [sucOrderDisplaying, setSucOrderDisplaying] = useState({display: \"none\"});\r\n    let navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (data) {\r\n            if (Object.keys(data).length === 0) {\r\n                setFormDisplaying({ display: \"none\" });\r\n                setSucOrderDisplaying({ display: \"block\" });\r\n                // console.log(1);\r\n                setTimeout(() => {\r\n                    // console.log(2);\r\n                    window.sessionStorage.removeItem(\"collection\");\r\n                    window.sessionStorage.removeItem(\"itemId\");\r\n                    navigate(\"/\");\r\n                }, 2700)\r\n            }\r\n        }\r\n    },[data])\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <Form method=\"post\" action=\"\" className=\"main-form\" style={formDisplaying}>\r\n                {/* Order Form */}\r\n                {\r\n                    order && (\r\n                        <div className=\"form-content\">\r\n                            <div className=\"info\">\r\n                                <h2>Info</h2>\r\n                                <label className=\"name\">\r\n                                    Name\r\n                                    <div className=\"input-group\">\r\n                                        <input type=\"text\" name=\"f-name\" placeholder=\"First\" style={fNameErr} />\r\n                                        <input type=\"text\" name=\"l-name\" placeholder=\"Last\" style={lNameErr}/>\r\n                                    </div>\r\n                                    <p className=\"err-msg\">{data && (data.name || data.fName || data.lName)}</p>\r\n                                </label>\r\n                                <label className=\"address\">\r\n                                    Address\r\n                                    <input type=\"text\" name=\"address\" placeholder=\"Address In Details\" style={adrsErr}/>\r\n                                    <p className=\"err-msg\">{data && data.address}</p>\r\n                                </label>\r\n                                <label className=\"phone\">\r\n                                    Phone\r\n                                    <input type=\"tel\" name=\"phone\" placeholder=\"+2011 4201 4769\" style={phErr}/>\r\n                                    <p className=\"err-msg\">{data && data.phone}</p>\r\n                                </label>\r\n                                <label className=\"location\">\r\n                                    Your Location\r\n                                    <input type=\"text\" name=\"location\" style={locErr} />\r\n                                    <p className=\"err-msg\">{data && data.location}</p>\r\n                                </label>\r\n                            </div>\r\n                            <hr/>\r\n                            <div className=\"order-details\">\r\n                                <h2>Your Order</h2>\r\n                                <p className=\"item-name\">Item: <span>{props.dish.name + \" \"  + props.dish.cat}</span></p>\r\n                                    <p>Size:</p>\r\n                                <div className=\"order-size\">\r\n                                    <label className=\"small\">\r\n                                        <input type=\"checkbox\" checked={smallBoxChecked} onChange={() => handleCheckBoxChanges(\"small\")}  name=\"checkbox-small\" value=\"small-size\" style={CheckBoxesErr}/>\r\n                                        <span>Small - &pound;{parseFloat(props.dish.price).toFixed(2)}</span>\r\n                                        <input type=\"number\" name=\"num-of-small-items\" value={numOfSmallItems} onChange={(e) => handleInputChanges(\"sm\",+e.target.value)} style={CheckBoxesErr}/>\r\n                                    </label>\r\n                                    <label className=\"medium\">\r\n                                        <input type=\"checkbox\" checked={mediumBoxChecked} onChange={() => handleCheckBoxChanges(\"medium\")}  name=\"checkbox-medium\" value=\"medium\" style={CheckBoxesErr}/>\r\n                                        <span>Medium - &pound;{parseFloat(props.dish.medPrice).toFixed(2)}</span>\r\n                                        <input type=\"number\" name=\"num-of-medium-items\" value={numOfMediumItems} onChange={(e) => handleInputChanges(\"med\",+e.target.value)} style={CheckBoxesErr}/>\r\n                                    </label>\r\n                                    <label className=\"large\">\r\n                                        <input type=\"checkbox\" checked={largeBoxChecked} onChange={() => handleCheckBoxChanges(\"large\")}  name=\"checkbox-large\" value=\"large\" style={CheckBoxesErr}/>\r\n                                        <span>Large - &pound;{parseFloat(props.dish.lgPrice).toFixed(2)}</span>\r\n                                        <input type=\"number\" name=\"num-of-large-items\" value={numOfLargeItems} onChange={(e) => handleInputChanges(\"lg\",+e.target.value)} style={CheckBoxesErr}/>\r\n                                    </label>\r\n                                </div>\r\n                                <p className=\"err-msg\">{data && data.checkBox}</p>\r\n                            </div>\r\n                            <hr/>\r\n                            <div className=\"payment\">\r\n                                <h2>Payment</h2>\r\n                                <p>Offer: <span>{ props.dish.offer ? props.dish.offer + \"%\" : \"No Offer\"}</span></p>\r\n                                <p>Total Cost: <span>&pound;{parseFloat(totalCost).toFixed(2)}</span></p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                {/* Reservation Form */}\r\n                {\r\n                    reservation && (\r\n                        <div className=\"form-content\">\r\n                    <labe   l className=\"name\">\r\n                            Name\r\n                            <div className=\"input-group\">\r\n                                <input type=\"text\" name=\"f-name\" placeholder=\"First\" style={fNameErr} />\r\n                                <input type=\"text\" name=\"l-name\" placeholder=\"Last\" style={lNameErr}/>\r\n                            </div>\r\n                            <p className=\"err-msg\">{data && (data.name || data.fName || data.lName)}</p>\r\n                        </labe>\r\n                        </div>\r\n                    )\r\n                }\r\n                <button type=\"submit\">Submit</button>\r\n                <div className=\"success-order\" style={sucOrderDisplaying}>\r\n                    <img src={require(\"../images/delivery-boy.png\")} alt=\"delivery\" />\r\n                    <h3>You will have the order soon..</h3>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const formValidation = async({request}) => {\r\n    const data = await request.formData();\r\n\r\n    const submission = {\r\n        fName: data.get(\"f-name\").replaceAll(\" \", \"\"),\r\n        lName: data.get(\"l-name\").replaceAll(\" \", \"\"),\r\n        address: data.get(\"address\").replaceAll(\" \", \"\"),\r\n        phone: data.get(\"phone\").replaceAll(\" \", \"\"),\r\n        location: data.get(\"location\").replaceAll(\" \", \"\"),\r\n        smallBoxChecked: data.get(\"checkbox-small\"),\r\n        mediumBoxChecked: data.get(\"checkbox-medium\"),\r\n        largeBoxChecked: data.get(\"checkbox-large\"),\r\n        numOfSmallItems: data.get(\"num-of-small-items\"),\r\n        numOfMediumItems: data.get(\"num-of-medium-items\"),\r\n        numOfLargeItems: data.get(\"num-of-large-items\"),\r\n    }\r\n\r\n    // Handle Errors\r\n    let errors = {};\r\n    \r\n    // Handle Empty Inputs\r\n    (\r\n        () => {\r\n            if (submission.fName === \"\" && submission.lName === \"\") {\r\n                errors.name = \"Your Name Is Required !\";\r\n            } else if (submission.fName === \"\" ) {\r\n                errors.fName = \"Your First Name Is Required !\";\r\n            } else if (submission.lName === \"\") {\r\n                errors.lName = \"Your Last Name Is Required !\";\r\n            }\r\n            if (submission.address === \"\") {\r\n                errors.address = \"Your Address Is Required !\";\r\n            }\r\n            if (submission.phone === \"\") {\r\n                errors.phone = \"Your Phone Is Required !\";\r\n            }\r\n            if (!submission.smallBoxChecked && !submission.mediumBoxChecked && !submission.smallBoxChecked) {\r\n                errors.checkBox = \"You Must Choose the size of your meal !\";\r\n            }\r\n        }\r\n    )()\r\n\r\n    // Regular Expressions for checking the inputs\r\n    const onlyStringReg = /[0-9!.,@#$%^&*(){}[\\]_+=><\\\";:?\\-~/\\\\|]/;\r\n    const someSpecialCharsReg = /[!@#$%^&*+\\\"?*~]/;\r\n    const phoneReg =\r\n        /^(?:(?:\\(?(?:00|\\+)([1-4]\\d\\d|[1-9]\\d?)\\)?)?[\\-\\.\\ \\\\\\/]?)?((?:\\(?\\d{1,}\\)?[\\-\\.\\ \\\\\\/]?){0,})(?:[\\-\\.\\ \\\\\\/]?(?:#|ext\\.?|extension|x)[\\-\\.\\ \\\\\\/]?(\\d+))?$/;\r\n    const locationUrlReg = /(https?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/;\r\n\r\n    // Handle Invalid Inputs\r\n    (\r\n        () => {\r\n            if (\r\n                (submission.fName != \"\" &&\r\n                onlyStringReg.test(submission.fName)) &&\r\n                (submission.lName != \"\" &&\r\n                onlyStringReg.test(submission.lName))\r\n            ) {\r\n                errors.name = \"Please Enter valid Names !\"\r\n            } else if (submission.fName != \"\" && onlyStringReg.test(submission.fName)) {\r\n                errors.fName = \"Please Enter a valid First Name !\"\r\n            } else if (submission.lName != \"\" && onlyStringReg.test(submission.lName)) {\r\n                errors.lName = \"Please Enter a valid Last Name !\"\r\n            }\r\n            if (submission.address != \"\" && someSpecialCharsReg.test(submission.address)) {\r\n                errors.address = \"Please Enter a valid Address !\"\r\n            }\r\n            if (submission.phone != \"\" && !phoneReg.test(submission.phone)) {\r\n                errors.phone = \"Please Enter a valid Phone Number !\"\r\n            }\r\n            if (submission.location != \"\" && !locationUrlReg.test(submission.location)) {\r\n                errors.location = \"Please Enter a valid Location !\"\r\n            }\r\n        }\r\n    )()\r\n\r\n    return errors;\r\n}\r\n\r\n\r\nexport default FormComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}