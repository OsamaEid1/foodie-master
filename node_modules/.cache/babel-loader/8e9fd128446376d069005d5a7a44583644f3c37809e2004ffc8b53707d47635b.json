{"ast":null,"code":"var _jsxFileName = \"D:\\\\web\\\\Learn_React\\\\Foodie-Master\\\\src\\\\components\\\\FormComponent.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { Form, useActionData, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormComponent = props => {\n  _s();\n  // Detect which Form Is Requested For\n  let order, reservation, contact;\n  if (props.for == \"order\") {\n    order = true;\n  } else if (props.for == \"reservation\") {\n    reservation = true;\n  } else if (props.for == \"contact\") {\n    contact = true;\n  }\n\n  // Form Validation Result\n  const data = useActionData();\n\n  // Handle Changes\n  // Inputs\n  let [numOfSmallItems, setNumOfSmallItems] = useState(1);\n  let [numOfMediumItems, setNumOfMediumItems] = useState(0);\n  let [numOfLargeItems, setNumOfLargeItems] = useState(0);\n  // CheckBoxes\n  let [smallBoxChecked, setSmallBoxChecked] = useState(true);\n  let [mediumBoxChecked, setMediumBoxChecked] = useState(false);\n  let [largeBoxChecked, setLargeBoxChecked] = useState(false);\n\n  // Set no. Of Items\n  let handleInputChanges = (input, val) => {\n    if (val >= 0) {\n      if (input === \"sm\") {\n        setNumOfSmallItems(val);\n        if (smallBoxChecked === false) {\n          setSmallBoxChecked(true);\n        }\n        if (val === 0) {\n          setSmallBoxChecked(false);\n        }\n      } else if (input === \"med\") {\n        setNumOfMediumItems(val);\n        if (mediumBoxChecked === false) {\n          setMediumBoxChecked(true);\n        }\n        if (val === 0) {\n          setMediumBoxChecked(false);\n        }\n      } else if (input === \"lg\") {\n        setNumOfLargeItems(val);\n        if (largeBoxChecked === false) {\n          setLargeBoxChecked(true);\n        }\n        if (val === 0) {\n          setLargeBoxChecked(false);\n        }\n      } else {\n        console.log(Error(\"Invalid input name arg in handleInputChanges function call\"));\n      }\n    }\n  };\n  // Set Checked OR Unchecked of every CheckBox\n  let handleCheckBoxChanges = box => {\n    if (box === \"small\") {\n      setSmallBoxChecked(!smallBoxChecked);\n    } else if (box === \"medium\") {\n      setMediumBoxChecked(!mediumBoxChecked);\n    } else if (box === \"large\") {\n      setLargeBoxChecked(!largeBoxChecked);\n    } else {\n      console.error(\"Invalid input name arg in handleCheckBoxChanges function call\");\n    }\n  };\n  let totalCost;\n  let fNameErr, lNameErr, adrsErr, phErr, locErr, CheckBoxesErr, dateErr, timeErr, guestsNumErr, msgErr, subjErr, emailErr;\n  if (order) {\n    // Calculate Total Cost In Real Time\n    (() => {\n      let smPrice = 0,\n        medPrice = 0,\n        lgPrice = 0;\n      if (smallBoxChecked) {\n        smPrice = props.dish.price * numOfSmallItems;\n        totalCost = smPrice;\n      }\n      if (mediumBoxChecked) {\n        medPrice = props.dish.medPrice * numOfMediumItems;\n      }\n      if (largeBoxChecked) {\n        lgPrice = props.dish.lgPrice * numOfLargeItems;\n      }\n      totalCost = smPrice + medPrice + lgPrice;\n      if (props.dish.offer) {\n        let offer = props.dish.offer / 100 * totalCost;\n        totalCost -= offer;\n      }\n    })();\n    // Inputs Errors\n    (() => {\n      if (data) {\n        if (data.name) {\n          fNameErr = {\n            border: \"1px solid red\"\n          };\n          lNameErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.fName) {\n          fNameErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.lName) {\n          lNameErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.address) {\n          adrsErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.phone) {\n          phErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.location) {\n          locErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.checkBox) {\n          CheckBoxesErr = {\n            border: \"1px solid red\"\n          };\n        }\n      }\n    })();\n  } else if (reservation) {\n    // Inputs Errors\n    (() => {\n      if (data) {\n        if (data.name) {\n          fNameErr = {\n            border: \"1px solid red\"\n          };\n          lNameErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.fName) {\n          fNameErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.lName) {\n          lNameErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.phone) {\n          phErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.date) {\n          dateErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.time) {\n          timeErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.guestsNum) {\n          guestsNumErr = {\n            border: \"1px solid red\"\n          };\n        }\n      }\n    })();\n  } else if (contact) {\n    // Inputs Errors\n    (() => {\n      if (data) {\n        if (data.name) {\n          fNameErr = {\n            border: \"1px solid red\"\n          };\n          lNameErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.fName) {\n          fNameErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.lName) {\n          lNameErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.email) {\n          emailErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.subject) {\n          subjErr = {\n            border: \"1px solid red\"\n          };\n        }\n        if (data.msg) {\n          msgErr = {\n            border: \"1px solid red\"\n          };\n        }\n      }\n    })();\n  } else {\n    console.log(Error(\"The Value OF 'for' Prop You Passed doesn't match with (order / reservation / contact)\"));\n  }\n  // Set no. Of Persons \n  let [selected, setSelected] = useState(0);\n  let handleSelect = selected => {\n    setSelected(selected);\n  };\n  // Show Success Operation Message And Navigate User To Home Page\n  let form = useRef();\n  let sucOp = useRef();\n  let navigate = useNavigate();\n  useEffect(() => {\n    if (data) {\n      if (Object.keys(data).length === 0) {\n        form.current.classList.add(\"hide\");\n        sucOp.current.classList.add(\"show\");\n        setTimeout(() => {\n          navigate(\"/\");\n        }, 3000);\n      }\n    }\n  }, [data]);\n  return (\n    /*#__PURE__*/\n    // style={formDisplaying}\n    _jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        method: \"post\",\n        action: \"\",\n        className: \"main-form\",\n        ref: form,\n        children: [order && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            defaultValue: \"order\",\n            name: \"type\",\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"name\",\n              children: [\"Name\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"f-name\",\n                  placeholder: \"First\",\n                  style: fNameErr\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"l-name\",\n                  placeholder: \"Last\",\n                  style: lNameErr\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"err-msg\",\n                children: data && (data.name || data.fName || data.lName)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"address\",\n              children: [\"Address\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"address\",\n                placeholder: \"Address In Details\",\n                style: adrsErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"err-msg\",\n                children: data && data.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"phone\",\n              children: [\"Phone\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                name: \"phone\",\n                placeholder: \"+2011 4201 4769\",\n                style: phErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"err-msg\",\n                children: data && data.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"location\",\n              children: [\"Your Location\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"location\",\n                style: locErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"err-msg\",\n                children: data && data.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Your Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"item-name\",\n              children: [\"Item: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: props.dish.name + \" \" + props.dish.cat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 64\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-size\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: smallBoxChecked,\n                  onChange: () => handleCheckBoxChanges(\"small\"),\n                  name: \"checkbox-small\",\n                  value: \"small-size\",\n                  style: CheckBoxesErr\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Small - \\xA3\", parseFloat(props.dish.price).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"num-of-small-items\",\n                  value: numOfSmallItems,\n                  onChange: e => handleInputChanges(\"sm\", +e.target.value),\n                  style: CheckBoxesErr\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"medium\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: mediumBoxChecked,\n                  onChange: () => handleCheckBoxChanges(\"medium\"),\n                  name: \"checkbox-medium\",\n                  value: \"medium\",\n                  style: CheckBoxesErr\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Medium - \\xA3\", parseFloat(props.dish.medPrice).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"num-of-medium-items\",\n                  value: numOfMediumItems,\n                  onChange: e => handleInputChanges(\"med\", +e.target.value),\n                  style: CheckBoxesErr\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"large\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: largeBoxChecked,\n                  onChange: () => handleCheckBoxChanges(\"large\"),\n                  name: \"checkbox-large\",\n                  value: \"large\",\n                  style: CheckBoxesErr\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Large - \\xA3\", parseFloat(props.dish.lgPrice).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"num-of-large-items\",\n                  value: numOfLargeItems,\n                  onChange: e => handleInputChanges(\"lg\", +e.target.value),\n                  style: CheckBoxesErr\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"err-msg\",\n              children: data && data.checkBox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Offer: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: props.dish.offer ? props.dish.offer + \"%\" : \"No Offer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Total Cost: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\xA3\", parseFloat(totalCost).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 48\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this), reservation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            defaultValue: \"reservation\",\n            name: \"type\",\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"name\",\n            children: [\"Name\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"f-name\",\n                placeholder: \"First\",\n                style: fNameErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"l-name\",\n                placeholder: \"Last\",\n                style: lNameErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"err-msg\",\n              children: data && (data.name || data.fName || data.lName)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"phone\",\n            children: [\"Phone\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              name: \"phone\",\n              placeholder: \"+2011 4201 4769\",\n              style: phErr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"err-msg\",\n              children: data && data.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"date\",\n            children: [\"Date\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"date\",\n              style: dateErr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"err-msg\",\n              children: data && data.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"time\",\n            children: [\"Time\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              name: \"time\",\n              style: timeErr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"err-msg\",\n              children: data && data.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"guestsNum\",\n            children: [\"Number Of Guests\", /*#__PURE__*/_jsxDEV(\"select\", {\n              style: guestsNumErr,\n              value: selected,\n              name: \"guestsNum\",\n              onChange: e => handleSelect(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                style: {\n                  color: \"#777\"\n                },\n                value: \"0\",\n                children: \"Please select\"\n              }, \"0\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"One\"\n              }, \"1\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"Tow\"\n              }, \"2\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"Three\"\n              }, \"3\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"Four\"\n              }, \"4\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"Five\"\n              }, \"5\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"6\",\n                children: \"Sex\"\n              }, \"6\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"7\",\n                children: \"Seven\"\n              }, \"7\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"8\",\n                children: \"Eight\"\n              }, \"8\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"err-msg\",\n              children: data && data.guestsNum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"comments\",\n            children: [\"Comments\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              cols: \"30\",\n              rows: \"7\",\n              name: \"comments\",\n              placeholder: \"Write Any Comments You Have here..\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 25\n        }, this), contact && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            defaultValue: \"contact\",\n            name: \"type\",\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"name\",\n            children: [\"Name\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"f-name\",\n                placeholder: \"First\",\n                style: fNameErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"l-name\",\n                placeholder: \"Last\",\n                style: lNameErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"err-msg\",\n              children: data && (data.name || data.fName || data.lName)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"email\",\n            children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              placeholder: \"info@example.com\",\n              style: emailErr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"err-msg\",\n              children: data && data.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"subject\",\n            children: [\"Subject\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"subject\",\n              style: subjErr,\n              placeholder: \"Food Testy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"err-msg\",\n              children: data && data.subject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"msg\",\n            children: [\"Message\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              cols: \"30\",\n              rows: \"7\",\n              name: \"msg\",\n              placeholder: \"Write Your Message Here..\",\n              style: msgErr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"err-msg\",\n              children: data && data.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-operation\",\n        ref: sucOp,\n        children: [order && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(\"../images/delivery-boy.png\"),\n          alt: \"delivery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 29\n        }, this), order && /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"You will have the order soon..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 29\n        }, this), reservation && /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Success Reservation, We Are happy To See You Soon..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 35\n        }, this), contact && /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Thanks For Contact Us We Will Take Your Feedback In consideration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(FormComponent, \"LEOZd8dLlgQ3V9jWJk3U2fGzry4=\", false, function () {\n  return [useActionData, useNavigate];\n});\n_c = FormComponent;\nexport const formValidation = async _ref => {\n  let {\n    request\n  } = _ref;\n  // Get Form Data \n  const data = await request.formData();\n  // Get Type Of Form\n  const formType = data.get(\"type\");\n  console.log(\"LLLLLLLLLLL\", formType);\n  // Set Object To Set Inputs Values In\n  let submission = {};\n  if (formType == \"order\") {\n    submission = {\n      fName: data.get(\"f-name\").replaceAll(\" \", \"\"),\n      lName: data.get(\"l-name\").replaceAll(\" \", \"\"),\n      address: data.get(\"address\").replaceAll(\" \", \"\"),\n      phone: data.get(\"phone\").replaceAll(\" \", \"\"),\n      location: data.get(\"location\").replaceAll(\" \", \"\"),\n      smallBoxChecked: data.get(\"checkbox-small\"),\n      mediumBoxChecked: data.get(\"checkbox-medium\"),\n      largeBoxChecked: data.get(\"checkbox-large\"),\n      numOfSmallItems: data.get(\"num-of-small-items\"),\n      numOfMediumItems: data.get(\"num-of-medium-items\"),\n      numOfLargeItems: data.get(\"num-of-large-items\")\n    };\n  } else if (formType == \"reservation\") {\n    submission = {\n      fName: data.get(\"f-name\").replaceAll(\" \", \"\"),\n      lName: data.get(\"l-name\").replaceAll(\" \", \"\"),\n      phone: data.get(\"phone\").replaceAll(\" \", \"\"),\n      date: data.get(\"date\"),\n      time: data.get(\"time\"),\n      guestsNum: data.get(\"guestsNum\")\n    };\n  } else if (formType == \"contact\") {\n    console.log(\"hi\");\n    submission = {\n      fName: data.get(\"f-name\").replaceAll(\" \", \"\"),\n      lName: data.get(\"l-name\").replaceAll(\" \", \"\"),\n      email: data.get(\"email\").replaceAll(\" \", \"\"),\n      subject: data.get(\"subject\"),\n      msg: data.get(\"msg\")\n    };\n  } else {\n    console.log(Error(\"The type of the form you passed is invalid !\"));\n  }\n  console.log(\"subm\", submission);\n  // Regular Expressions for checking the inputs\n  const onlyStringReg = /[0-9!.,@#$%^&*(){}[\\]_+=><\\\";:?\\-~/\\\\|]/;\n  const phoneReg = /^(?:(?:\\(?(?:00|\\+)([1-4]\\d\\d|[1-9]\\d?)\\)?)?[\\-\\.\\ \\\\\\/]?)?((?:\\(?\\d{1,}\\)?[\\-\\.\\ \\\\\\/]?){0,})(?:[\\-\\.\\ \\\\\\/]?(?:#|ext\\.?|extension|x)[\\-\\.\\ \\\\\\/]?(\\d+))?$/;\n  const locationUrlReg = /(https?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/;\n  const emailReg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  const someSpecialCharsReg = /[!@#$%^&*+\\\"?*~]/;\n  console.log(emailReg.test(submission.email));\n  // Handle Errors\n  // Set Object To Set Inputs Errors In\n  let errors = {};\n  if (formType == \"order\") {\n    // Handle Empty Inputs\n    (() => {\n      if (submission.fName === \"\" && submission.lName === \"\") {\n        errors.name = \"Your Name Is Required !\";\n      } else if (submission.fName === \"\") {\n        errors.fName = \"Your First Name Is Required !\";\n      } else if (submission.lName === \"\") {\n        errors.lName = \"Your Last Name Is Required !\";\n      }\n      if (submission.address === \"\") {\n        errors.address = \"Your Address Is Required !\";\n      }\n      if (submission.phone === \"\") {\n        errors.phone = \"Your Phone Is Required !\";\n      }\n      if (!submission.smallBoxChecked && !submission.mediumBoxChecked && !submission.smallBoxChecked) {\n        errors.checkBox = \"You Must Choose the size of your meal !\";\n      }\n    })();\n    // Handle Invalid Inputs\n    (() => {\n      if (submission.fName != \"\" && onlyStringReg.test(submission.fName) && submission.lName != \"\" && onlyStringReg.test(submission.lName)) {\n        errors.name = \"Please Enter valid Names !\";\n      } else if (submission.fName != \"\" && onlyStringReg.test(submission.fName)) {\n        errors.fName = \"Please Enter a valid First Name !\";\n      } else if (submission.lName != \"\" && onlyStringReg.test(submission.lName)) {\n        errors.lName = \"Please Enter a valid Last Name !\";\n      }\n      if (submission.address != \"\" && someSpecialCharsReg.test(submission.address)) {\n        errors.address = \"Please Enter a valid Address !\";\n      }\n      if (submission.phone != \"\" && !phoneReg.test(submission.phone)) {\n        errors.phone = \"Please Enter a valid Phone Number !\";\n      }\n      if (submission.location != \"\" && !locationUrlReg.test(submission.location)) {\n        errors.location = \"Please Enter a valid Location !\";\n      }\n    })();\n  } else if (formType == \"reservation\") {\n    // Handle Empty Inputs\n    (() => {\n      if (submission.fName === \"\" && submission.lName === \"\") {\n        errors.name = \"Your Name Is Required !\";\n      } else if (submission.fName === \"\") {\n        errors.fName = \"Your First Name Is Required !\";\n      } else if (submission.lName === \"\") {\n        errors.lName = \"Your Last Name Is Required !\";\n      }\n      if (submission.phone === \"\") {\n        errors.phone = \"Your Phone Is Required !\";\n      }\n      if (submission.date === \"\") {\n        errors.date = \"Reservation Date Is Required !\";\n      }\n      if (submission.time === \"\") {\n        errors.time = \"Reservation Time Is Required !\";\n      }\n      if (submission.guestsNum == 0) {\n        errors.guestsNum = \"Please Select The Number Of Guests Will Come With You !\";\n      }\n    })();\n    // Handle Invalid Inputs\n    (() => {\n      if (submission.fName != \"\" && onlyStringReg.test(submission.fName) && submission.lName != \"\" && onlyStringReg.test(submission.lName)) {\n        errors.name = \"Please Enter valid Names !\";\n      } else if (submission.fName != \"\" && onlyStringReg.test(submission.fName)) {\n        errors.fName = \"Please Enter a valid First Name !\";\n      } else if (submission.lName != \"\" && onlyStringReg.test(submission.lName)) {\n        errors.lName = \"Please Enter a valid Last Name !\";\n      }\n      if (submission.phone != \"\" && !phoneReg.test(submission.phone)) {\n        errors.phone = \"Please Enter a valid Phone Number !\";\n      }\n    })();\n  } else if (formType == \"contact\") {\n    // Handle Empty Inputs\n    (() => {\n      if (submission.fName === \"\" && submission.lName === \"\") {\n        errors.name = \"Your Name Is Required !\";\n      } else if (submission.fName === \"\") {\n        errors.fName = \"Your First Name Is Required !\";\n      } else if (submission.lName === \"\") {\n        errors.lName = \"Your Last Name Is Required !\";\n      }\n      if (submission.email === \"\") {\n        errors.email = \"Your Email Is Required !\";\n      }\n      if (submission.subject === \"\") {\n        errors.subject = \"Subject Is Required !\";\n      }\n      if (submission.msg === \"\") {\n        errors.msg = \"Message Is Required !\";\n      }\n    })();\n    // Handle Invalid Inputs\n    (() => {\n      if (submission.fName != \"\" && onlyStringReg.test(submission.fName) && submission.lName != \"\" && onlyStringReg.test(submission.lName)) {\n        errors.name = \"Please Enter valid Names !\";\n      } else if (submission.fName != \"\" && onlyStringReg.test(submission.fName)) {\n        errors.fName = \"Please Enter a valid First Name !\";\n      } else if (submission.lName != \"\" && onlyStringReg.test(submission.lName)) {\n        errors.lName = \"Please Enter a valid Last Name !\";\n      }\n      if (submission.subject != \"\" && !isNaN(submission.subject)) {\n        errors.subject = \"Please Enter a Valid Subject !\";\n      }\n      if (submission.email != \"\" && !emailReg.test(submission.email)) {\n        errors.email = \"Please Enter a valid Email !\";\n      }\n    })();\n  } else {\n    console.log(Error(\"The type of the form you passed is invalid !\"));\n  }\n  return errors;\n};\nexport default FormComponent;\nvar _c;\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"names":["useEffect","useRef","useState","Form","useActionData","useNavigate","FormComponent","props","order","reservation","contact","for","data","numOfSmallItems","setNumOfSmallItems","numOfMediumItems","setNumOfMediumItems","numOfLargeItems","setNumOfLargeItems","smallBoxChecked","setSmallBoxChecked","mediumBoxChecked","setMediumBoxChecked","largeBoxChecked","setLargeBoxChecked","handleInputChanges","input","val","console","log","Error","handleCheckBoxChanges","box","error","totalCost","fNameErr","lNameErr","adrsErr","phErr","locErr","CheckBoxesErr","dateErr","timeErr","guestsNumErr","msgErr","subjErr","emailErr","smPrice","medPrice","lgPrice","dish","price","offer","name","border","fName","lName","address","phone","location","checkBox","date","time","guestsNum","email","subject","msg","selected","setSelected","handleSelect","form","sucOp","navigate","Object","keys","length","current","classList","add","setTimeout","display","cat","parseFloat","toFixed","e","target","value","color","require","formValidation","request","formData","formType","get","submission","replaceAll","onlyStringReg","phoneReg","locationUrlReg","emailReg","someSpecialCharsReg","test","errors","isNaN"],"sources":["D:/web/Learn_React/Foodie-Master/src/components/FormComponent.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { Form, useActionData, useNavigate } from \"react-router-dom\";\r\n\r\nconst FormComponent = (props) => {\r\n    // Detect which Form Is Requested For\r\n    let order, reservation, contact;\r\n    if (props.for == \"order\") {\r\n        order = true;\r\n    } else if (props.for == \"reservation\") {\r\n        reservation = true;\r\n    } else if (props.for == \"contact\") {\r\n        contact = true;\r\n    }\r\n\r\n    // Form Validation Result\r\n    const data = useActionData();\r\n\r\n    // Handle Changes\r\n    // Inputs\r\n    let [numOfSmallItems, setNumOfSmallItems] = useState(1);\r\n    let [numOfMediumItems, setNumOfMediumItems] = useState(0);\r\n    let [numOfLargeItems, setNumOfLargeItems] = useState(0);\r\n    // CheckBoxes\r\n    let [smallBoxChecked, setSmallBoxChecked] = useState(true);\r\n    let [mediumBoxChecked, setMediumBoxChecked] = useState(false);\r\n    let [largeBoxChecked, setLargeBoxChecked] = useState(false);\r\n\r\n    // Set no. Of Items\r\n    let handleInputChanges = (input, val) => {\r\n        if (val >= 0) {\r\n            if (input === \"sm\") {\r\n                setNumOfSmallItems(val);\r\n                if (smallBoxChecked === false) {\r\n                    setSmallBoxChecked(true);\r\n                }   \r\n                if (val === 0) {\r\n                    setSmallBoxChecked(false);\r\n                }\r\n            } else if (input === \"med\") {\r\n                setNumOfMediumItems(val);\r\n                if (mediumBoxChecked === false) {\r\n                    setMediumBoxChecked(true);\r\n                }\r\n                if (val === 0) {\r\n                    setMediumBoxChecked(false);\r\n                }\r\n            } else if (input === \"lg\") {\r\n                setNumOfLargeItems(val);\r\n                if (largeBoxChecked === false) {\r\n                    setLargeBoxChecked(true);\r\n                }\r\n                if (val === 0) {\r\n                    setLargeBoxChecked(false);\r\n                }\r\n            } else {\r\n                console.log(Error(\"Invalid input name arg in handleInputChanges function call\"));\r\n            }\r\n        }\r\n    }\r\n    // Set Checked OR Unchecked of every CheckBox\r\n    let handleCheckBoxChanges = (box) => {\r\n        if (box === \"small\") {\r\n            setSmallBoxChecked(!smallBoxChecked);\r\n        } else if (box === \"medium\") {\r\n            setMediumBoxChecked(!mediumBoxChecked);\r\n        } else if (box === \"large\"){\r\n            setLargeBoxChecked(!largeBoxChecked);\r\n        } else {\r\n            console.error(\"Invalid input name arg in handleCheckBoxChanges function call\");\r\n        }\r\n    }\r\n    \r\n    let totalCost;\r\n    let fNameErr,\r\n    lNameErr,\r\n    adrsErr,\r\n    phErr,\r\n    locErr,\r\n    CheckBoxesErr,\r\n    dateErr,\r\n    timeErr,\r\n    guestsNumErr,\r\n    msgErr,\r\n    subjErr,\r\n    emailErr;\r\n    if (order) {\r\n        // Calculate Total Cost In Real Time\r\n        (\r\n            () => {\r\n                let smPrice = 0, medPrice = 0, lgPrice = 0;\r\n                if (smallBoxChecked) {\r\n                    smPrice = props.dish.price * numOfSmallItems; \r\n                    totalCost = smPrice;\r\n                }\r\n                if (mediumBoxChecked) {\r\n                    medPrice = props.dish.medPrice * numOfMediumItems; \r\n                }\r\n                if (largeBoxChecked) {\r\n                    lgPrice = props.dish.lgPrice * numOfLargeItems; \r\n                }\r\n                totalCost = smPrice + medPrice + lgPrice;\r\n                if (props.dish.offer) {\r\n                    let offer = (props.dish.offer / 100) * totalCost;\r\n                    totalCost -= offer;\r\n                }\r\n            }\r\n            )();\r\n        // Inputs Errors\r\n        (\r\n            () => {\r\n                if (data) {\r\n                    if (data.name) {\r\n                        fNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                        lNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                    }\r\n                    if (data.fName) {\r\n                        fNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                    }\r\n                    if (data.lName) {\r\n                        lNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                    }\r\n                    if (data.address) {\r\n                        adrsErr = {\r\n                            border: \"1px solid red\",\r\n                        };\r\n                    }\r\n                    if (data.phone) {\r\n                        phErr = {\r\n                            border: \"1px solid red\",\r\n                        };\r\n                    }\r\n                    if (data.location) {\r\n                        locErr = {\r\n                            border: \"1px solid red\",\r\n                        };\r\n                    }\r\n                    if (data.checkBox) {\r\n                        CheckBoxesErr = {\r\n                            border: \"1px solid red\",\r\n                        };\r\n                    }\r\n                } \r\n            }\r\n        )();\r\n    } else if (reservation) {\r\n        // Inputs Errors\r\n        (\r\n            () => {\r\n                if (data) {\r\n                    if (data.name) {\r\n                        fNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                        lNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                    }\r\n                    if (data.fName) {\r\n                        fNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                    }\r\n                    if (data.lName) {\r\n                        lNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                    }\r\n                    if (data.phone) {\r\n                        phErr = {\r\n                            border: \"1px solid red\",\r\n                        };\r\n                    }\r\n                    if (data.date) {\r\n                        dateErr = {\r\n                            border: \"1px solid red\",\r\n                        }\r\n                    } \r\n                    if (data.time) {\r\n                        timeErr = {\r\n                            border: \"1px solid red\",\r\n                        }\r\n                    }\r\n                    if (data.guestsNum) {\r\n                        guestsNumErr = {\r\n                            border: \"1px solid red\",\r\n                        }\r\n                    }\r\n                } \r\n            }\r\n        )();\r\n    } else if (contact) {\r\n        // Inputs Errors\r\n        (\r\n            () => {\r\n                if (data) {\r\n                    if (data.name) {\r\n                        fNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                        lNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                    }\r\n                    if (data.fName) {\r\n                        fNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                    }\r\n                    if (data.lName) {\r\n                        lNameErr = {\r\n                            border: \"1px solid red\"\r\n                        }\r\n                    }\r\n                    if (data.email) {\r\n                        emailErr = {\r\n                            border: \"1px solid red\",\r\n                        };\r\n                    }\r\n                    if (data.subject) {\r\n                        subjErr = {\r\n                            border: \"1px solid red\",\r\n                        }\r\n                    } \r\n                    if (data.msg) {\r\n                        msgErr = {\r\n                            border: \"1px solid red\",\r\n                        }\r\n                    }\r\n                } \r\n            }\r\n        )();\r\n    } else {\r\n        console.log(Error(\"The Value OF 'for' Prop You Passed doesn't match with (order / reservation / contact)\"));\r\n    }\r\n    // Set no. Of Persons \r\n    let [selected , setSelected] = useState(0);\r\n    let handleSelect = (selected) => {\r\n        setSelected(selected);\r\n    };\r\n    // Show Success Operation Message And Navigate User To Home Page\r\n    let form = useRef();\r\n    let sucOp = useRef();\r\n    let navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (data) {\r\n            if (Object.keys(data).length === 0) {\r\n                form.current.classList.add(\"hide\");\r\n                sucOp.current.classList.add(\"show\");\r\n                setTimeout(() => {\r\n                    navigate(\"/\");\r\n                }, 3000)\r\n            }\r\n        }\r\n    },[data])\r\n\r\n    return (\r\n        // style={formDisplaying}\r\n        <div className=\"content\">\r\n            <Form method=\"post\" action=\"\" className=\"main-form\" ref={form}>\r\n                {/* Order Form */}\r\n                {\r\n                    order && (\r\n                        <div className=\"form-content\">\r\n                            {/* This Input For Send Info To Form Validation Function */}\r\n                            <input type=\"text\" defaultValue=\"order\" name=\"type\" style={{display: \"none\"}} />\r\n                            {/* End */}\r\n                            <div className=\"info\">\r\n                                <h2>Info</h2>\r\n                                <label className=\"name\">\r\n                                    Name\r\n                                    <div className=\"input-group\">\r\n                                        <input type=\"text\" name=\"f-name\" placeholder=\"First\" style={fNameErr} />\r\n                                        <input type=\"text\" name=\"l-name\" placeholder=\"Last\" style={lNameErr}/>\r\n                                    </div>\r\n                                    <p className=\"err-msg\">{data && (data.name || data.fName || data.lName)}</p>\r\n                                </label>\r\n                                <label className=\"address\">\r\n                                    Address\r\n                                    <input type=\"text\" name=\"address\" placeholder=\"Address In Details\" style={adrsErr}/>\r\n                                    <p className=\"err-msg\">{data && data.address}</p>\r\n                                </label>\r\n                                <label className=\"phone\">\r\n                                    Phone\r\n                                    <input type=\"tel\" name=\"phone\" placeholder=\"+2011 4201 4769\" style={phErr}/>\r\n                                    <p className=\"err-msg\">{data && data.phone}</p>\r\n                                </label>\r\n                                <label className=\"location\">\r\n                                    Your Location\r\n                                    <input type=\"text\" name=\"location\" style={locErr} />\r\n                                    <p className=\"err-msg\">{data && data.location}</p>\r\n                                </label>\r\n                            </div>\r\n                            <hr/>\r\n                            <div className=\"order-details\">\r\n                                <h2>Your Order</h2>\r\n                                <p className=\"item-name\">Item: <span>{props.dish.name + \" \"  + props.dish.cat}</span></p>\r\n                                    <p>Size:</p>\r\n                                <div className=\"order-size\">\r\n                                    <label className=\"small\">\r\n                                        <input type=\"checkbox\" checked={smallBoxChecked} onChange={() => handleCheckBoxChanges(\"small\")}  name=\"checkbox-small\" value=\"small-size\" style={CheckBoxesErr}/>\r\n                                        <span>Small - &pound;{parseFloat(props.dish.price).toFixed(2)}</span>\r\n                                        <input type=\"number\" name=\"num-of-small-items\" value={numOfSmallItems} onChange={(e) => handleInputChanges(\"sm\",+e.target.value)} style={CheckBoxesErr}/>\r\n                                    </label>\r\n                                    <label className=\"medium\">\r\n                                        <input type=\"checkbox\" checked={mediumBoxChecked} onChange={() => handleCheckBoxChanges(\"medium\")}  name=\"checkbox-medium\" value=\"medium\" style={CheckBoxesErr}/>\r\n                                        <span>Medium - &pound;{parseFloat(props.dish.medPrice).toFixed(2)}</span>\r\n                                        <input type=\"number\" name=\"num-of-medium-items\" value={numOfMediumItems} onChange={(e) => handleInputChanges(\"med\",+e.target.value)} style={CheckBoxesErr}/>\r\n                                    </label>\r\n                                    <label className=\"large\">\r\n                                        <input type=\"checkbox\" checked={largeBoxChecked} onChange={() => handleCheckBoxChanges(\"large\")}  name=\"checkbox-large\" value=\"large\" style={CheckBoxesErr}/>\r\n                                        <span>Large - &pound;{parseFloat(props.dish.lgPrice).toFixed(2)}</span>\r\n                                        <input type=\"number\" name=\"num-of-large-items\" value={numOfLargeItems} onChange={(e) => handleInputChanges(\"lg\",+e.target.value)} style={CheckBoxesErr}/>\r\n                                    </label>\r\n                                </div>\r\n                                <p className=\"err-msg\">{data && data.checkBox}</p>\r\n                            </div>\r\n                            <hr/>\r\n                            <div className=\"payment\">\r\n                                <h2>Payment</h2>\r\n                                <p>Offer: <span>{ props.dish.offer ? props.dish.offer + \"%\" : \"No Offer\"}</span></p>\r\n                                <p>Total Cost: <span>&pound;{parseFloat(totalCost).toFixed(2)}</span></p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                {/* Reservation Form */}\r\n                {\r\n                    reservation && (\r\n                        <div className=\"form-content\">\r\n                            {/* This Input For Send Info To Form Validation Function */}\r\n                            <input type=\"text\" defaultValue=\"reservation\" name=\"type\" style={{display: \"none\"}} />\r\n                            {/* End */}\r\n                            <label className=\"name\">\r\n                                Name\r\n                                <div className=\"input-group\">\r\n                                    <input type=\"text\" name=\"f-name\" placeholder=\"First\" style={fNameErr} />\r\n                                    <input type=\"text\" name=\"l-name\" placeholder=\"Last\" style={lNameErr}/>\r\n                                </div>\r\n                                <p className=\"err-msg\">{data && (data.name || data.fName || data.lName)}</p>\r\n                            </label>\r\n                            <label className=\"phone\">\r\n                                Phone\r\n                                <input type=\"tel\" name=\"phone\" placeholder=\"+2011 4201 4769\" style={phErr}/>\r\n                                <p className=\"err-msg\">{data && data.phone}</p>\r\n                            </label>\r\n                            <label className=\"date\">\r\n                                Date\r\n                                <input type=\"date\" name=\"date\" style={dateErr}/>\r\n                                <p className=\"err-msg\">{data && data.date}</p>\r\n                            </label>\r\n                            <label className=\"time\">\r\n                                Time\r\n                                <input type=\"time\" name=\"time\" style={timeErr}/>\r\n                                <p className=\"err-msg\">{data && data.time}</p>\r\n                            </label>\r\n                            <label className=\"guestsNum\">\r\n                                Number Of Guests\r\n                                <select style={guestsNumErr} value={selected} name=\"guestsNum\" onChange={(e) => handleSelect(e.target.value)}>\r\n                                    <option style={{color: \"#777\"}} value=\"0\" key=\"0\">Please select</option>\r\n                                    <option value=\"1\" key=\"1\">One</option>\r\n                                    <option value=\"2\" key=\"2\">Tow</option>\r\n                                    <option value=\"3\" key=\"3\">Three</option>\r\n                                    <option value=\"4\" key=\"4\">Four</option>\r\n                                    <option value=\"5\" key=\"5\">Five</option>\r\n                                    <option value=\"6\" key=\"6\">Sex</option>\r\n                                    <option value=\"7\" key=\"7\">Seven</option>\r\n                                    <option value=\"8\" key=\"8\">Eight</option>\r\n                                </select>\r\n                                <p className=\"err-msg\">{data && data.guestsNum}</p>\r\n                            </label>\r\n                            <label className=\"comments\">\r\n                                Comments\r\n                                <textarea cols=\"30\" rows=\"7\" name=\"comments\" placeholder=\"Write Any Comments You Have here..\"></textarea>\r\n                            </label>\r\n                        </div>  \r\n                    )\r\n                }\r\n                {/* Contact Us Form */}\r\n                {\r\n                    contact && (\r\n                        <div className=\"form-content\">\r\n                            {/* This Input For Send Info To Form Validation Function */}\r\n                            <input type=\"text\" defaultValue=\"contact\" name=\"type\" style={{display: \"none\"}} />\r\n                            {/* End */}\r\n                            <label className=\"name\">\r\n                                Name\r\n                                <div className=\"input-group\">\r\n                                    <input type=\"text\" name=\"f-name\" placeholder=\"First\" style={fNameErr} />\r\n                                    <input type=\"text\" name=\"l-name\" placeholder=\"Last\" style={lNameErr}/>\r\n                                </div>\r\n                                <p className=\"err-msg\">{data && (data.name || data.fName || data.lName)}</p>\r\n                            </label>\r\n                            <label className=\"email\">\r\n                                Email\r\n                                <input type=\"text\" name=\"email\" placeholder=\"info@example.com\" style={emailErr}/>\r\n                                <p className=\"err-msg\">{data && data.email}</p>\r\n                            </label>\r\n                            <label className=\"subject\">\r\n                                Subject\r\n                                <input type=\"text\" name=\"subject\" style={subjErr} placeholder=\"Food Testy\"/>\r\n                                <p className=\"err-msg\">{data && data.subject}</p>\r\n                            </label>\r\n                            <label className=\"msg\">\r\n                                Message\r\n                                <textarea cols=\"30\" rows=\"7\" name=\"msg\" placeholder=\"Write Your Message Here..\" style={msgErr}></textarea>\r\n                                <p className=\"err-msg\">{data && data.msg}</p>\r\n                            </label>\r\n                        </div>  \r\n                    )\r\n                }\r\n                <button type=\"submit\">Submit</button>\r\n            </Form>  \r\n               {/* style={sucOrderDisplaying} */}\r\n            <div className=\"success-operation\" ref={sucOp} >\r\n                { order && (<img src={require(\"../images/delivery-boy.png\")} alt=\"delivery\" />)}\r\n                { order && (<h3>You will have the order soon..</h3>)}\r\n                { reservation && (<h3>Success Reservation, We Are happy To See You Soon..</h3>)}\r\n                { contact && (<h3>Thanks For Contact Us We Will Take Your Feedback In consideration</h3>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const formValidation = async({request}) => {\r\n    // Get Form Data \r\n    const data = await request.formData();\r\n    // Get Type Of Form\r\n    const formType = data.get(\"type\"); \r\n    console.log(\"LLLLLLLLLLL\",formType);\r\n    // Set Object To Set Inputs Values In\r\n    let submission = {};\r\n\r\n    if (formType == \"order\") {        \r\n        submission = {\r\n            fName: data.get(\"f-name\").replaceAll(\" \", \"\"),\r\n            lName: data.get(\"l-name\").replaceAll(\" \", \"\"),\r\n            address: data.get(\"address\").replaceAll(\" \", \"\"),\r\n            phone: data.get(\"phone\").replaceAll(\" \", \"\"),\r\n            location: data.get(\"location\").replaceAll(\" \", \"\"),\r\n            smallBoxChecked: data.get(\"checkbox-small\"),\r\n            mediumBoxChecked: data.get(\"checkbox-medium\"),\r\n            largeBoxChecked: data.get(\"checkbox-large\"),\r\n            numOfSmallItems: data.get(\"num-of-small-items\"),\r\n            numOfMediumItems: data.get(\"num-of-medium-items\"),\r\n            numOfLargeItems: data.get(\"num-of-large-items\"),\r\n        }\r\n    } else if (formType == \"reservation\") {\r\n        submission = {\r\n            fName: data.get(\"f-name\").replaceAll(\" \", \"\"),\r\n            lName: data.get(\"l-name\").replaceAll(\" \", \"\"),\r\n            phone: data.get(\"phone\").replaceAll(\" \", \"\"),\r\n            date: data.get(\"date\"),\r\n            time: data.get(\"time\"),\r\n            guestsNum: data.get(\"guestsNum\"),\r\n        }\r\n    } else if (formType == \"contact\") {\r\n        console.log(\"hi\");\r\n        submission = {\r\n            fName: data.get(\"f-name\").replaceAll(\" \", \"\"),\r\n            lName: data.get(\"l-name\").replaceAll(\" \", \"\"),\r\n            email: data.get(\"email\").replaceAll(\" \", \"\"),\r\n            subject: data.get(\"subject\"),\r\n            msg: data.get(\"msg\"),\r\n        }\r\n    } else {\r\n        console.log(Error(\"The type of the form you passed is invalid !\"))\r\n    }\r\nconsole.log(\"subm\", submission);\r\n// Regular Expressions for checking the inputs\r\nconst onlyStringReg = /[0-9!.,@#$%^&*(){}[\\]_+=><\\\";:?\\-~/\\\\|]/;\r\n    const phoneReg =\r\n    /^(?:(?:\\(?(?:00|\\+)([1-4]\\d\\d|[1-9]\\d?)\\)?)?[\\-\\.\\ \\\\\\/]?)?((?:\\(?\\d{1,}\\)?[\\-\\.\\ \\\\\\/]?){0,})(?:[\\-\\.\\ \\\\\\/]?(?:#|ext\\.?|extension|x)[\\-\\.\\ \\\\\\/]?(\\d+))?$/;\r\n    const locationUrlReg = /(https?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/;\r\n    const emailReg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    const someSpecialCharsReg = /[!@#$%^&*+\\\"?*~]/;\r\n    \r\n    console.log(emailReg.test(submission.email));\r\n    // Handle Errors\r\n    // Set Object To Set Inputs Errors In\r\n    let errors = {};\r\n\r\n    if (formType == \"order\") {\r\n        // Handle Empty Inputs\r\n        (\r\n            () => {\r\n                if (submission.fName === \"\" && submission.lName === \"\") {\r\n                    errors.name = \"Your Name Is Required !\";\r\n                } else if (submission.fName === \"\" ) {\r\n                    errors.fName = \"Your First Name Is Required !\";\r\n                } else if (submission.lName === \"\") {\r\n                    errors.lName = \"Your Last Name Is Required !\";\r\n                }\r\n                if (submission.address === \"\") {\r\n                    errors.address = \"Your Address Is Required !\";\r\n                }\r\n                if (submission.phone === \"\") {\r\n                    errors.phone = \"Your Phone Is Required !\";\r\n                }\r\n                if (!submission.smallBoxChecked && !submission.mediumBoxChecked && !submission.smallBoxChecked) {\r\n                    errors.checkBox = \"You Must Choose the size of your meal !\";\r\n                }\r\n            }\r\n        )();\r\n    // Handle Invalid Inputs\r\n    (\r\n        () => {\r\n            if (\r\n                (submission.fName != \"\" &&\r\n                onlyStringReg.test(submission.fName)) &&\r\n                (submission.lName != \"\" &&\r\n                onlyStringReg.test(submission.lName))\r\n            ) {\r\n                errors.name = \"Please Enter valid Names !\"\r\n            } else if (submission.fName != \"\" && onlyStringReg.test(submission.fName)) {\r\n                errors.fName = \"Please Enter a valid First Name !\"\r\n            } else if (submission.lName != \"\" && onlyStringReg.test(submission.lName)) {\r\n                errors.lName = \"Please Enter a valid Last Name !\"\r\n            }\r\n            if (submission.address != \"\" && someSpecialCharsReg.test(submission.address)) {\r\n                errors.address = \"Please Enter a valid Address !\"\r\n            }\r\n            if (submission.phone != \"\" && !phoneReg.test(submission.phone)) {\r\n                errors.phone = \"Please Enter a valid Phone Number !\"\r\n            }\r\n            if (submission.location != \"\" && !locationUrlReg.test(submission.location)) {\r\n                errors.location = \"Please Enter a valid Location !\"\r\n            }\r\n        }\r\n    )();\r\n    } else if (formType == \"reservation\") {\r\n        // Handle Empty Inputs\r\n        (\r\n            () => {\r\n                if (submission.fName === \"\" && submission.lName === \"\") {\r\n                    errors.name = \"Your Name Is Required !\";\r\n                } else if (submission.fName === \"\" ) {\r\n                    errors.fName = \"Your First Name Is Required !\";\r\n                } else if (submission.lName === \"\") {\r\n                    errors.lName = \"Your Last Name Is Required !\";\r\n                }\r\n                if (submission.phone === \"\") {\r\n                    errors.phone = \"Your Phone Is Required !\";\r\n                }\r\n                if (submission.date === \"\") {\r\n                    errors.date = \"Reservation Date Is Required !\";\r\n                }\r\n                if (submission.time === \"\") {\r\n                    errors.time = \"Reservation Time Is Required !\";\r\n                }\r\n                if (submission.guestsNum == 0) {\r\n                    errors.guestsNum = \"Please Select The Number Of Guests Will Come With You !\";\r\n                }\r\n            }\r\n        )();\r\n    // Handle Invalid Inputs\r\n    (\r\n        () => {\r\n            if (\r\n                (submission.fName != \"\" &&\r\n                onlyStringReg.test(submission.fName)) &&\r\n                (submission.lName != \"\" &&\r\n                onlyStringReg.test(submission.lName))\r\n            ) {\r\n                errors.name = \"Please Enter valid Names !\"\r\n            } else if (submission.fName != \"\" && onlyStringReg.test(submission.fName)) {\r\n                errors.fName = \"Please Enter a valid First Name !\"\r\n            } else if (submission.lName != \"\" && onlyStringReg.test(submission.lName)) {\r\n                errors.lName = \"Please Enter a valid Last Name !\"\r\n            }\r\n            if (submission.phone != \"\" && !phoneReg.test(submission.phone)) {\r\n                errors.phone = \"Please Enter a valid Phone Number !\"\r\n            }\r\n        }\r\n    )()\r\n    } else if (formType == \"contact\") {\r\n        // Handle Empty Inputs\r\n        (\r\n            () => {\r\n                if (submission.fName === \"\" && submission.lName === \"\") {\r\n                    errors.name = \"Your Name Is Required !\";\r\n                } else if (submission.fName === \"\" ) {\r\n                    errors.fName = \"Your First Name Is Required !\";\r\n                } else if (submission.lName === \"\") {\r\n                    errors.lName = \"Your Last Name Is Required !\";\r\n                }\r\n                if (submission.email === \"\") {\r\n                    errors.email = \"Your Email Is Required !\";\r\n                }\r\n                if (submission.subject === \"\") {\r\n                    errors.subject = \"Subject Is Required !\";\r\n                }\r\n                if (submission.msg === \"\") {\r\n                    errors.msg = \"Message Is Required !\";\r\n                }\r\n            }\r\n        )();\r\n    // Handle Invalid Inputs\r\n    (\r\n        () => {\r\n            if (\r\n                (submission.fName != \"\" &&\r\n                onlyStringReg.test(submission.fName)) &&\r\n                (submission.lName != \"\" &&\r\n                onlyStringReg.test(submission.lName))\r\n            ) {\r\n                errors.name = \"Please Enter valid Names !\"\r\n            } else if (submission.fName != \"\" && onlyStringReg.test(submission.fName)) {\r\n                errors.fName = \"Please Enter a valid First Name !\"\r\n            } else if (submission.lName != \"\" && onlyStringReg.test(submission.lName)) {\r\n                errors.lName = \"Please Enter a valid Last Name !\"\r\n            }\r\n            if (submission.subject != \"\" && !isNaN(submission.subject)) {\r\n                errors.subject = \"Please Enter a Valid Subject !\";\r\n            }\r\n            if (submission.email != \"\" && !emailReg.test(submission.email)) {\r\n                errors.email = \"Please Enter a valid Email !\"\r\n            }\r\n        }\r\n    )()\r\n\r\n    } else {\r\n        console.log(Error(\"The type of the form you passed is invalid !\"))\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n\r\nexport default FormComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}